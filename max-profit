#!/usr/bin/env python3

import sys
import getopt
import simplex
import spxparser


def USAGE(fd=sys.stderr):
    print('Usage: {} QUANTITY* PRICE*\n'.format(sys.argv[0])
          + 'Calculate the optimal production according to QUANTITY(ies)'
          + 'of resource(s)\nand product PRICE(s).\n\n'
          + 'Options:\n'
          + '  -c, --config=FILE         use FILE as configuration file\n'
          + '  -h, --help                display this help text and exit', file=fd)


def parse_args(args, rsize):
    try:
        resources = [float(x) for x in args[:rsize]] # get resources
        prices = [float(x) for x in args[rsize:]] # get prices
    except:
        print('All arguments mus be integers', file=sys.stderr)
        sys.exit(84)

    if any(x < 0 for x in resources): # check if all resources are greater or equal to 0
        print('A quantity must be greater or equal to 0', file=sys.stderr)
        sys.exit(84)
    elif any(x <= 0 for x in prices): # check if all prices are greater than 0
        print('The price must be greater than 0', file=sys.stderr)
        sys.exit(84)

    return resources, prices


def main():
    try:
        optlist, args = getopt.gnu_getopt(sys.argv[1:], 'hc:', ['config=', 'help'])
    except:
        sys.exit(84)

    csvfile = ''
    for o, a in optlist:
        if o == '-c' or o == '--config=':
            csvfile = a
        elif o == '-h' or o == '--help':
            USAGE(sys.stdout)
            sys.exit(0)

    cnf = spxparser.spxparser(csvfile)

    resources, prices = parse_args(args, cnf.get_nb_resources())

    try:
        smx = simplex.simplex(resources, prices, parser=cnf)
        smx.solve()
        print(smx)
    except ValueError as e:
        print('{}: {}'.format(sys.argv[0], e), file=sys.stderr)
        sys.exit(84);


if __name__ == '__main__':
    main()
